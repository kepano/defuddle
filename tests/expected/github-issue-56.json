{
  "metadata": {
    "title": "Defuddle on Cloudflare Workers",
    "author": "jmorrell",
    "site": "jmorrell",
    "published": "2025-05-25T20:35:48.000Z"
  },
  "content": {
    "html": "<div><p>Example repo here: <a href=\"https://github.com/jmorrell/defuddle-cloudflare-example\">https://github.com/jmorrell/defuddle-cloudflare-example</a></p> <p>I was looking forward to ditching my tenuous <code>readbilityjs</code> fork in my workers project. Defuddle ultimately does run to completion, but I ran into a couple of issues. Supporting this environment fully is likely challenging since <code>JSDOM</code> does not work within the Worker environment. I suspect the same will be true of the deno and bun runtimes.</p><p>I was able to work around this by using the browser version along with <a href=\"https://github.com/WebReflection/linkedom\">linkedom</a>, however this is not an exact replacement for JSDOM and doesn't implement all the CSS functionality.</p><p>Since defuddle relies on these style heuristics, <strong>I'm not sure there is a great path to supporting the full functionality in this environment</strong>, but I wanted to open an issue for discussion and to document these issues for anyone else who might hit this.</p><p>When running I get two errors:</p><pre><code>Defuddle: Error evaluating media queries: TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))</code></pre> <p>This is due to linkedom not implementing <code>doc.styleSheets</code>: <a href=\"https://github.com/kepano/defuddle/blob/cb4291db0f24cac0d0674d9e35fc0089338da2da/src/defuddle.ts#L213\">https://github.com/kepano/defuddle/blob/cb4291db0f24cac0d0674d9e35fc0089338da2da/src/defuddle.ts#L213</a></p> <p>This could be silenced by falling back to <code>[]</code> if <code>doc.styleSheets</code> isn't present, however that may not be the desired behavior.</p><pre><code>const sheets = Array.from(doc.styleSheets ?? [])</code></pre> <p>The second issue is due to <code>getComputedStyle</code> not being supported by linkedom.</p><pre><code>Defuddle Error processing document: TypeError: e3.getComputedStyle is not a function</code></pre> <p>If you feel like there's nothing to do, or supporting Workers is out-of-scope for the project, feel free to close the issue</p></div>",
    "markdown": "Example repo here: [https://github.com/jmorrell/defuddle-cloudflare-example](https://github.com/jmorrell/defuddle-cloudflare-example)\n\nI was looking forward to ditching my tenuous `readbilityjs` fork in my workers project. Defuddle ultimately does run to completion, but I ran into a couple of issues. Supporting this environment fully is likely challenging since `JSDOM` does not work within the Worker environment. I suspect the same will be true of the deno and bun runtimes.\n\nI was able to work around this by using the browser version along with [linkedom](https://github.com/WebReflection/linkedom), however this is not an exact replacement for JSDOM and doesn't implement all the CSS functionality.\n\nSince defuddle relies on these style heuristics, **I'm not sure there is a great path to supporting the full functionality in this environment**, but I wanted to open an issue for discussion and to document these issues for anyone else who might hit this.\n\nWhen running I get two errors:\n\n```\nDefuddle: Error evaluating media queries: TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))\n```\n\nThis is due to linkedom not implementing `doc.styleSheets`: [https://github.com/kepano/defuddle/blob/cb4291db0f24cac0d0674d9e35fc0089338da2da/src/defuddle.ts#L213](https://github.com/kepano/defuddle/blob/cb4291db0f24cac0d0674d9e35fc0089338da2da/src/defuddle.ts#L213)\n\nThis could be silenced by falling back to `[]` if `doc.styleSheets` isn't present, however that may not be the desired behavior.\n\n```\nconst sheets = Array.from(doc.styleSheets ?? [])\n```\n\nThe second issue is due to `getComputedStyle` not being supported by linkedom.\n\n```\nDefuddle Error processing document: TypeError: e3.getComputedStyle is not a function\n```\n\nIf you feel like there's nothing to do, or supporting Workers is out-of-scope for the project, feel free to close the issue"
  }
}